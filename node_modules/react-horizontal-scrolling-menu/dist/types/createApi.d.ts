/// <reference types="react" />
import { scrollToItem } from './helpers';
import ItemsMap from './ItemsMap';
import type { visibleItems } from './types';
export default function createApi(items: ItemsMap, visibleItems?: visibleItems): {
    getItemById: (id: string) => import("./types").IOItem | undefined;
    getItemElementById: (id: string | number) => Element | null;
    getItemByIndex: (index: number | string) => import("./types").IOItem | undefined;
    getItemElementByIndex: (id: string | number) => Element | null;
    getNextItem: () => import("./types").IOItem | undefined;
    getPrevItem: () => import("./types").IOItem | undefined;
    isFirstItemVisible: boolean;
    isItemVisible: (id: string) => boolean;
    isLastItem: (id: string) => boolean;
    isLastItemVisible: boolean;
    scrollNext: (behavior?: ScrollBehavior, inline?: ScrollLogicalPosition, block?: ScrollLogicalPosition) => void;
    scrollPrev: (behavior?: ScrollBehavior, inline?: ScrollLogicalPosition, block?: ScrollLogicalPosition) => void;
    scrollToItem: typeof scrollToItem;
    visibleItems: visibleItems;
    visibleItemsWithoutSeparators: visibleItems;
};
export interface publicApiType extends ReturnType<typeof createApi> {
    initComplete: boolean;
    items: ItemsMap;
    scrollContainer: React.RefObject<HTMLElement | null>;
    visibleItems: visibleItems;
}
